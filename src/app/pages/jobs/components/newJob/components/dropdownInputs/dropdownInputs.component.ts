import {Component} from '@angular/core';
import {MyDatePicker} from '../../../../../../../my-date-picker/index';
import { NamesService, JobsService } from '../../../../../../services';
import {Job} from '../../../../job';
import {BaPictureUploader} from '../../../../../../theme/components';


@Component({
  selector: 'dropdown-inputs',
  template: require('./dropdownInputs.html'),
  providers :[JobsService],
  styles: [require('./input-form.scss')],
  directives: [MyDatePicker, BaPictureUploader],
})
export class DropdownInputs {
  
  jobDetails: Array<any []>= [];
  clients = [];
  beginDate: any;
  endDate: any;
  today = new Date();


  newJob = {
    jobid: "",
    manager: "",
    brand: "",
    client: "",
    status: "",
    type: "",
    store: "",
    details: "Job Details Here"
  };

/*picture Loader*/
/* UPLOAD image     */
  public defaultPicture = 'assets/img/theme/no-photo.png';
  public profile:any = {
    picture: 'assets/img/store.png'
  };
  public uploaderOptions:any = {
    // url: 'http://website.com/upload'
  };


  constructor(private _namesService: NamesService, private _jobsService : JobsService) {}

  selectedDate:string = ''; 

  //options for the begin date picker
  private beginDatePickerOptions = {
      todayBtnTxt: 'Today',
      dateFormat: 'dd/mm/yyyy',
      firstDayOfWeek: 'mo',
      //sunHighlight: true,
      height: '34px',
      width: '260px',
      disableUntil: {year: this.today.getFullYear(), month: this.today.getMonth()+1, day: this.today.getDate()-1},
      disableSince: {year: 0, month: 0, day: 0}

  };

  //options for the end date picker
  private endDatePickerOptions = {
      //todayBtnTxt: 'Today',
      dateFormat: 'dd/mm/yyyy',
      firstDayOfWeek: 'mo',
      //sunHighlight: true,
      height: '34px',
      width: '260px',
      disableUntil: {year: this.today.getFullYear(), month: this.today.getMonth()+1, day: this.today.getDate()-1}
  };
    
    selectedText: string = '';
    border: string = 'none';

  

  //first get all the possible entries for a new job (e.g. project managers, brands, etc)
  ngOnInit(){

    
	  this._namesService.getNames().
	  subscribe((names) =>
	  { 
      this.jobDetails = names.data[0],
     
      this.newJob.manager = names.data[0].manager[0].name,
      this.newJob.brand = names.data[0].brand[0].name,
      this.newJob.client = names.data[0].client[0].name,
      this.newJob.status = names.data[0].status[0].name,
      this.newJob.type = names.data[0].type[0].name,
      this.newJob.store = names.data[0].store[0].name
    })
	}

  //when the submit button is clicked, get all of the details for the job and sent to database
  onSubmit(){
    let txt;
    if (this.newJob.details ==="Job Details Here" || this.newJob.details ===undefined){
      txt= "No details";
    }
    if (this.beginDate === undefined){
      let utc = new Date().toJSON().slice(0,10); 
      this.beginDate = utc;
    }
     if (this.endDate === undefined){
      let utc = new Date().toJSON().slice(0,10); 
      this.endDate = utc;
    }

    let uid = (new Date().getTime()).toString(36);  //used as a unique identifier for the job, is more intuitive than the one generated by the database
    
    //call data
    let job = new Job( this.newJob.jobid =  "Job-"+uid,
                        this.newJob.manager,
                        this.newJob.brand,
                        this.newJob.type,
                        this.newJob.client,
                        this.newJob.status,
                        this.newJob.store);
    
    this._jobsService.createJob(job)  //call job api to create a new job with the data submitted by the user
    .subscribe(); //alert user if job has been created
    alert("Your Job has been created!");

  }

  //This sets the begin date of the job to that which the user selects, also prevents user from picking a date later than the end date (if selected)
  onBeginDateChanged(event:any) {
    this.beginDate=event.date;
    // console.log('onDateChanged1(): ', event.formatted);
    this.endDatePickerOptions.disableUntil.year = this.beginDate.year;  
    this.endDatePickerOptions.disableUntil.month = this.beginDate.month;
    this.endDatePickerOptions.disableUntil.day = this.beginDate.day-1;
  }
  //This sets the end date of the job to that which the user selects, also prevents user from picking a date earlier than the begin date (if selected)
  onEndDateChanged(event:any) {
    this.endDate=event.date;
    this.beginDatePickerOptions.disableSince.year = this.endDate.year;  
    this.beginDatePickerOptions.disableSince.month = this.endDate.month;
    this.beginDatePickerOptions.disableSince.day = this.endDate.day+1;
  }
}  